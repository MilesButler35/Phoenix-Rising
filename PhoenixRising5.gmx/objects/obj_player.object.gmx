<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>SPR_Player_Idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create Player
restart = false;
Speed = 14;//Movement Speed
SpeedMod = 1;//Modifier for speed so it can be affected by power-ups and debuffs

IsAttacking = false;//Boolean variable to say whether Player is attacking
AttackType = 0;//Variable to store the attack type the Player is using

MaxHP = 100;
CurrentHP = obj_controller.health;
IsHit = false;

OnGround = true;
GroundY = y;

image_speed = .75;

MyCamera = instance_create(x,y,obj_camera);
EnemyList = ds_list_create();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>IsHit = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if(CurrentHP &gt; 0){
    
    XSpeed = 0;
    if(keyboard_check(ord('A'))){
        XSpeed = -1*Speed;
    }else if(keyboard_check(ord('D'))){
        XSpeed = Speed;
    }
    
   
    YSpeed = 0;
    if(OnGround == true){
        if(keyboard_check(ord('W'))){
            YSpeed = -1*Speed;
        }else if(keyboard_check(ord('S'))){
            YSpeed = Speed;
        }
    }
    
    if(IsAttacking == false){
        
        if(OnGround==true){    
            if(XSpeed != 0 &amp;&amp; YSpeed != 0){
                x+=XSpeed*SpeedMod*.7;
                y+=YSpeed*SpeedMod*.7;
            }else if(XSpeed != 0 || YSpeed != 0){
                x+=XSpeed*SpeedMod;
                y+=YSpeed*SpeedMod;
            }
            
        }else if(OnGround == false ){
            x+=XSpeed*SpeedMod;
        }
        
       
        if(XSpeed != 0){
            image_xscale = sign(XSpeed*SpeedMod);
        }
        
  
        if(XSpeed == 0 &amp;&amp; YSpeed == 0 &amp;&amp; OnGround == true){
            SpeedMod = 1;
            sprite_index = SPR_Player_Idle;
        }else if((XSpeed!=0 || YSpeed != 0) &amp;&amp; sprite_index!=SPR_PlayerWalk &amp;&amp; OnGround == true){
            sprite_index = SPR_PlayerWalk;
        }
    }

}else{
    MyCamera.State = "Dead";
    sprite_index = SPR_PlayerDead;
    restart = true;
    if (restart)
    {
        image_index = 7;
        if (keyboard_check_pressed(vk_space))
        {
            room_restart();
            score = 0;
        }
    }


}


if(OnGround == true){
    GroundY = y;
}


depth = -1*GroundY;

x=clamp(x, 0, room_width);
y=clamp(y, 0, room_height);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var MyAttack = 0;

if(IsHit == false &amp;&amp; CurrentHP &gt; 0){
    if(AttackType == "Light Punch"){
       sprite_index = SPR_Player_BA1;
        MyAttack = instance_create(x,y,obj_playerlightatk);
    }
    
    if(AttackType == "Strong Punch"){
        sprite_index = SPR_Player_HA1;
        MyAttack = instance_create(x,y,obj_playerstrongatk);
    }

}

if(MyAttack != 0){
    SpeedMod = 0;
    IsAttacking = true;
    MyAttack.image_xscale = image_xscale;
    MyAttack.image_speed = image_speed;
    MyAttack.Owner = "Player";
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(IsAttacking == true){
    IsAttacking = false;
    SpeedMod = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>obj_controller</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_alpha(1);
draw_set_color(c_black);
draw_rectangle(18,18,264,42,false);

draw_set_color(c_maroon);
draw_rectangle(20,20,262,40,false);

if(CurrentHP &gt; 0){

    draw_rectangle_colour(20,20,20+242*(CurrentHP/MaxHP),40,c_green,c_lime,c_lime,c_green,false);

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>524</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_color</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>13</kind>
            <string>16777215</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>703</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_draw_score</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>500</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>1</kind>
            <string>Score: </string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self(); 

if (restart)
{
draw_set_halign(fa_center);
draw_set_color(c_white);
draw_text(obj_camera.x, obj_camera.y, "You died.# Press space to restart.");
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>AttackType = "";

if(keyboard_check(vk_numpad4) || keyboard_check(ord('J')) || keyboard_check('A')){
    AttackType = "Light Punch";
}

if(keyboard_check(vk_numpad8) || keyboard_check(ord('K')) || keyboard_check('S')){
    AttackType = "Strong Punch";
}

if(OnGround == true){
    event_user(2);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
